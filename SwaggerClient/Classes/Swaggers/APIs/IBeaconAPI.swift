//
// IBeaconAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class IBeaconAPI {
    /**
     Add iBeacon log and responce message

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addIBeaconReceivedInfo(body: [JSONValue]? = nil, completion: @escaping ((_ data: MessageResponse?,_ error: Error?) -> Void)) {
        addIBeaconReceivedInfoWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Add iBeacon log and responce message
     - POST /installed_application/ibeacon_received_info_log
     - 

     - examples: [{contentType=application/json, example={
  "message" : {
    "title" : "this is title",
    "body" : "body"
  }
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<MessageResponse> 
     */
    open class func addIBeaconReceivedInfoWithRequestBuilder(body: [JSONValue]? = nil) -> RequestBuilder<MessageResponse> {
        let path = "/installed_application/ibeacon_received_info_log"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<MessageResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
